name: Nightly Build

on: 
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  create-release:

    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
      version: ${{ steps.mucommander_version.outputs.VERSION }}
      full_version: ${{ steps.mucommander_version.outputs.FULL_VERSION }}

    steps:
      - name: Remove previous tag and release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3

      - name : Get version
        id: mucommander_version
        run: |
          echo "FULL_VERSION=$(${{github.workspace}}/gradlew -q printFullVersionName)" >> $GITHUB_OUTPUT
          echo "VERSION=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_OUTPUT

      - name: Create a new release
        uses: softprops/action-gh-release@v1
        id: create_release
        with:
          name: Nightly
          tag_name: nightly
          prerelease: true
          draft: true
          body: "Snapshot of v${{ steps.mucommander_version.outputs.VERSION }}"

  upload-macos-artifacts:

    runs-on: macos-latest
    needs: create-release

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build dmg
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dmg

      - name: Upload dmg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "./build/distributions/mucommander-${{ needs.create-release.outputs.full_version }}.dmg"
          asset_name: mucommander-snapshot.dmg
          asset_content_type: application/octet-stream

  upload-linux-artifacts:

    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build portable, tgz, deb, and rpm
        uses: gradle/gradle-build-action@v2
        with:
          arguments: tgz portable deb rpm

      - name: Upload portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "./build/distributions/mucommander-${{ needs.create-release.outputs.full_version }}-portable.zip"
          asset_name: mucommander-snapshot-portable.zip
          asset_content_type: application/zip

      - name: Upload tgz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "./build/distributions/mucommander-${{ needs.create-release.outputs.full_version }}.tgz"
          asset_name: mucommander-snapshot.tgz
          asset_content_type: application/gzip

      - uses: DovnarAlexander/github-action-file-detection@master
        id: find_deb
        with:
          wildcard: '*.deb'
          base_path: build/distributions

      - name: Upload deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.find_deb.outputs.found }}
          asset_name: mucommander-snapshot_amd64.deb
          asset_content_type: application/octet-stream

      - uses: DovnarAlexander/github-action-file-detection@master
        id: find_rpm
        with:
          wildcard: '*.rpm'
          base_path: build/distributions

      - name: Upload rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.find_rpm.outputs.found }}
          asset_name: mucommander-snapshot.x86_64.rpm
          asset_content_type: application/octet-stream


  upload-windows-artifacts:

    runs-on: windows-latest
    needs: create-release

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build msi
        uses: gradle/gradle-build-action@v2
        with:
          arguments: msi

      - name: Upload msi
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "./build/distributions/mucommander-${{ needs.create-release.outputs.version }}.msi"
          asset_name: mucommander-snapshot.msi
          asset_content_type: application/octet-stream

  publish-release:

    runs-on: ubuntu-latest
    needs: [ create-release, upload-linux-artifacts, upload-macos-artifacts, upload-windows-artifacts ]

    steps:
      - name: Publish the new release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-release.outputs.release_id }}
