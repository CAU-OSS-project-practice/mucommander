name: Nightly Build

on: 
  schedule:
    - cron:  '* 23 * * *'
  workflow_dispatch:

jobs:
  create-new-release:

    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Remove previous tag and release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: avakar/tag-and-release@v1
        id: create_release
        with:
          tag_name: nightly
          release_name: Nightly
          prerelease: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-linux-artifacts:

    runs-on: ubuntu-latest
    needs: create-new-release

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - uses: gradle/wrapper-validation-action@v1
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: portable tgz

      - uses: DovnarAlexander/github-action-file-detection@master
        id: find_portable
        with:
          wildcard: '*-portable.zip'
          base_path: build/distributions

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-new-release.outputs.upload_url }}
          asset_path: ${{ steps.find_portable.outputs.found }}
          asset_name: mucommander-snapshot-portable.zip
          asset_content_type: application/zip

      - uses: DovnarAlexander/github-action-file-detection@master
        id: find_tgz
        with:
          wildcard: '*.tgz'
          base_path: build/distributions

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-new-release.outputs.upload_url }}
          asset_path: ${{ steps.find_tgz.outputs.found }}
          asset_name: mucommander-snapshot.tgz
          asset_content_type: application/gzip

  release-macos-artifacts:

    runs-on: macos-latest
    needs: create-new-release

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - uses: gradle/wrapper-validation-action@v1
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: dmg

      - name : Retrieve Version
        run: |
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew -q printVersionName)"
        id: mucommander_version

      - name: Get version
        run: |
          echo "version_name=${{steps.mucommander_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV 

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-new-release.outputs.upload_url }}
          asset_path: echo "build/distributions/mucommander-${{env.version_name}}.dmg"
          asset_name: mucommander-snapshot.dmg
          asset_content_type: application/octet-stream


